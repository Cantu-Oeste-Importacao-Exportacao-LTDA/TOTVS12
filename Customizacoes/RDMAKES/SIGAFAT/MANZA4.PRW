#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MANZA4    ºAutor  ³Jean Carlos Saggin  º Data ³  05/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função para manutenção de flex adicional x vendedor.       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Faturamento/Força de Vendas                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function ManZA4()

Private cTabela   := "ZA4"
Private cCadastro := "Flex Complem x Vendedor x Período"
Private aRotina   := {}

aAdd(aRotina, {"&Pesquisar",  "AxPesqui", 0, 1})
aAdd(aRotina, {"&Visualizar", "AxVisual", 0, 2})
aAdd(aRotina, {"&Incluir",    "U_ZA4Inc", 0, 3})
aAdd(aRotina, {"&Alterar",    "U_ZA4Alt", 0, 4})
aAdd(aRotina, {"&Excluir",    "U_ZA4Del", 0, 5})
aAdd(aRotina, {"&Workflows",  "U_WFCFG" , 0, 6})

DbSelectArea(cTabela)
(cTabela)->(DbSetOrder(1))
mBrowse(6, 1, 22, 75, cTabela)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chama função para monitor uso de fontes customizados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
U_USORWMAKE(ProcName(),FunName())

Return Nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Função utilizada na validação de usuário do campo ZA4_PERIOD³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

User Function VldPeriodo(cPeriodo)

Local lRet := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chama função para monitor uso de fontes customizados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
U_USORWMAKE(ProcName(),FunName())

lRet := NaoVazio().and.;
		 SubStr(M->ZA4_PERIOD,1,2)$"01/02/03/04/05/06/07/08/09/10/11/12".and.;  
		 ((SubStr(M->ZA4_PERIOD,1,2) >= StrZero(Month(Date()),2).and.;
		 SubStr(M->ZA4_PERIOD,3,4) >= StrZero(Year(Date()),4)) .or.;
		 (SubStr(M->ZA4_PERIOD,1,2) < StrZero(Month(Date()),2).and.;
		 SubStr(M->ZA4_PERIOD,3,4) > StrZero(Year(Date()),4)))
		 
if !lRet
	Aviso("Conteúdo do campo Período", "Verifique se o conteúdo do campo atende aos seguintes requisitos:"+ CHR(13)+ CHR(10)+;
			"- Os dois primeiros dígitos formam um mês válido"+ CHR(13)+ CHR(10)+;
			"- Os dois primeiros dígitos formam um mês maior ou igual ao mês atual"+ CHR(13)+ CHR(10)+;
			"- O Ano informado nos últimos quatro dígitos formam um ano maior ou igual ao ano corrente.", {"Ok"}, 2)
EndIf        

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ZA4Inc    ºAutor  ³Jean Carlos Saggin  º Data ³  14/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função responsável por fazer a inclusão dos registros      º±±
±±º          ³ na tabela ZA4 utilizando a função padrão AxInclui          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MANZA4                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function ZA4Inc()

Local nReg  := (cTabela)->(Recno())
Local aCpos := {"ZA4_FILIAL","ZA4_CODVEN","ZA4_DESCVE","ZA4_PERIOD","ZA4_VALOR","ZA4_USRINC",;
				  "ZA4_DTHRIN","ZA4_USRALT","ZA4_DTHRAL","ZA4_USREXC","ZA4_DTHREXC"} 

AxInclui(cTabela,nReg,3,,,aCpos,"U_ZA4TOK()",,,,,,,)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chama função para monitor uso de fontes customizados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
U_USORWMAKE(ProcName(),FunName())

Return 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Função responsável pela alteração do registro³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

User Function ZA4Alt()

Local nReg  := (cTabela)->(Recno())
Local aCpos := {"ZA4_FILIAL","ZA4_CODVEN","ZA4_DESCVE","ZA4_PERIOD","ZA4_VALOR","ZA4_USRINC",;
				  "ZA4_DTHRIN","ZA4_USRALT","ZA4_DTHRAL","ZA4_USREXC","ZA4_DTHREXC"}


AxAltera(cTabela,nReg,4,,aCpos,,,"U_ZA4TOK()",,,) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chama função para monitor uso de fontes customizados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
U_USORWMAKE(ProcName(),FunName())

Return Nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Função responsável pela exclusão do registro³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

User Function ZA4Del()

Local nReg  := (cTabela)->(Recno())
Local aCpos := {"ZA4_FILIAL","ZA4_CODVEN","ZA4_DESCVE","ZA4_PERIOD","ZA4_VALOR","ZA4_USRINC",;
				  "ZA4_DTHRIN","ZA4_USRALT","ZA4_DTHRAL","ZA4_USREXC","ZA4_DTHREXC"}
    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chama função para monitor uso de fontes customizados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
U_USORWMAKE(ProcName(),FunName())

RecLock("ZA4", .F.)
ZA4->ZA4_USREXC := cUserName
ZA4->ZA4_DTHREX := DTOS(DATE()) + ' ' + SUBSTR(TIME(), 1, 5)
MsUnlock()

AxDeleta(cTabela,nReg,5,,aCpos)

(cTabela)->(DbGoTo(nReg))
If !Deleted()
	RecLock("ZA4", .F.)
	ZA4->ZA4_USREXC := Space(15)
	ZA4->ZA4_DTHREX := Space(15)
	MsUnlock()
Else
	RptStatus({|lEnd| fEnvMail(5, ZA4->ZA4_CODVEN, ZA4->ZA4_PERIOD, ZA4->ZA4_VALOR, @lEnd)}, "Aguarde...","Calculando flex e enviando workflow...", .T.)	
EndIf

Return Nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Função que valida os dados na alteração do registro.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

User Function ZA4TOK(nOpc)

Local nOpc := 0
Local nVlAnt := 0
    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Chama função para monitor uso de fontes customizados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
U_USORWMAKE(ProcName(),FunName())

if INCLUI
	nOpc := 3
ElseIf ALTERA
	nOpc := 4
	nVlAnt := ZA4->ZA4_VALOR
	M->ZA4_USRALT := cUserName
	M->ZA4_DTHRAL := DTOS(DATE()) + ' ' + SUBSTR(TIME(), 1, 5)  
EndIf                                                           

RptStatus({|lEnd| fEnvMail(nOpc, M->ZA4_CODVEN, M->ZA4_PERIOD, M->ZA4_VALOR, nVlAnt, @lEnd)}, "Aguarde...","Calculando flex e enviando workflow...", .T.)

Return .T.  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Função responsável pelo envio de workflow aos interessados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Static Function fEnvMail(nOper, cCodVen, cPeriod, nValor, nVlAnt ,lEnd)

Local aFields := {"ZA4_CODVEN","ZA4_PERIOD","ZA4_VALOR"}
Local lAlter  := .F.
Local nX      := 0
Local aArea   := GetArea()
Local cRotina := 'MANZA4  '
Local lFound  := .F.
Local oProcess
Local cAssunto := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Busca o cadastro do processo de workflow na tabela ZWF³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DbSelectArea("ZWF")
ZWF->(DBSetOrder(1))
if DbSeek(xFilial("ZWF") + cRotina)
	lFound := .T.	
Else
	ConOut("Não foi encontrado processo "+ AllTrim(cRotina) +" na tabela ZWF! Envio de workflow cancelado.")
	RestArea(aArea)
	Return
EndIf               

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o processo de workflow para essa rotina está ativo.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

if ZWF->ZWF_ATIVO != "S"
	ConOut("O processo "+ AllTrim(cRotina) +" está desativado na tabela ZWF! Envio de workflow cancelado.")
	RestArea(aArea)
	Return  
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se a filial atual está vinculada ao cadastro do workflow³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

if !(cFilAnt $ ZWF->ZWF_LISFIL)
	ConOut("O processo "+ AllTrim(cRotina) +" não está ativo para essa filial! Inclua a filial "+ cFilAnt +" no campo Filiais da tabela ZWF! Envio de workflow cancelado.")
	RestArea(aArea)
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Edita o assunto do workflow de acordo com a operação.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

if nOper == 3
	cAssunto := "[FLEX ADICIONAL] "+ AllTrim(cUserName) +" liberou flex adicional."
ElseIf nOper == 4
	cAssunto := "[FLEX ADICIONAL] "+ AllTrim(cUserName) +" alterou uma liberação de flex adicional."
Else                                                                                
	cAssunto := "[FLEX ADICIONAL] "+ AllTrim(cUserName) +" excluíu uma liberação de flex adicional."
EndIf

oProcess := TWFProcess():New( "MANZA4", "FLEX ADICIONAL X VENDEDOR")
oProcess:NewTask( "MANZA4", "\WORKFLOW\MANZA4.HTML" )
oProcess:cSubject := cAssunto
oHTML := oProcess:oHTML

oProcess:cTo := AllTrim(ZWF->ZWF_EMAIL)
oProcess:cCC := AllTrim(ZWF->ZWF_EMAILC)
oProcess:cBCC := AllTrim(ZWF->ZWF_EMAILO)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Preenchimento de variáveis que compõem o workflow.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

DbSelectArea("SA3")
SA3->(DbSetOrder(1))
if DbSeek(xFilial("SA3") + cCodVen)
	cNome   := Upper(AllTrim(SubStr(SA3->A3_NOME, 01, 30)))
	cCodigo := cCodVen
EndIf

cMesAno := fGetPer(cPeriod)
cFlxAdi := fGetFlxAdi(cCodVen, cPeriod, nValor, nVlAnt, nOper)

DbSelectArea("ZA4")

if nOper == 3
	
	cOperacao := "incluíu"
	oHtml:ValByName("CUSUARIO", Upper(AllTrim(cUserName)) )
	oHtml:ValByName("COPERA"  , cOperacao )
	oHtml:ValByName("CNMVEN"  , cNome )
	oHtml:ValByName("CCODVND" , cCodigo )
	oHtml:ValByName("CPERIODO", cMesAno )
	oHtml:ValByName("FLXADIC" , cFlxAdi )   
	oHtml:ValByName("FLXUTIL" , "R$ 0,00" ) // Fixo por enquanto @qui...  
	
	oProcess:Start()
	oProcess:Finish()
	
ElseIf nOper == 4
	for nX := 1 to Len(aFields)
		if &("ZA4->"+aFields[nX]) != &("M->"+aFields[nX])
			lAlter := .T.
		EndIf
	Next nX
	if lAlter
		// Preenchimento de variáveis de alteração
		cOperacao := " alterou "

		oHtml:ValByName("CUSUARIO", Upper(AllTrim(cUserName)) )
		oHtml:ValByName("COPERA"  , cOperacao )
		oHtml:ValByName("CNMVEN"  , cNome )
		oHtml:ValByName("CCODVND" , cCodigo )
		oHtml:ValByName("CPERIODO", cMesAno )
		oHtml:ValByName("FLXADIC" , cFlxAdi )   
		oHtml:ValByName("FLXUTIL" , "R$ 0,00" ) // Fixo por enquanto @qui...
		
		oProcess:Start()
		oProcess:Finish()
		
	EndIf	
Else
	// Preenchimento de variáveis específicas para exclusão
	cOperacao := " excluíu "
	
	oHtml:ValByName("CUSUARIO", Upper(AllTrim(cUserName)) )
	oHtml:ValByName("COPERA"  , cOperacao )
	oHtml:ValByName("CNMVEN"  , cNome )
	oHtml:ValByName("CCODVND" , cCodigo )
	oHtml:ValByName("CPERIODO", cMesAno )
	oHtml:ValByName("FLXADIC" , cFlxAdi )   
	oHtml:ValByName("FLXUTIL" , "R$ 0,00" ) // Fixo por enquanto @qui... 
	
	oProcess:Start()
	oProcess:Finish()
	
EndIf

if lFound
	
	DbSelectArea("ZWF")
	ZWF->(DBSetOrder(1))
	DbSeek(xFilial("ZWF") + cRotina)

	RecLock("ZWF", .F.)
	ZWF->ZWF_ULTEXC := Date()
	ZWF->(MsUnlock())
EndIf

RestArea(aArea)
          
Return .T.      

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fGetPer  ºAutor  ³Jean Carlos Saggin   º Data ³  14/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função responsável por retornar mês e ano em formato de    º±±
±±º          ³ string                                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MANZA4                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fGetPer(cPeriodo)

Local cRet := ""
Local cMes := SubStr(cPeriodo, 01, 02)
Local cAno := SubStr(cPeriodo, 03, 04)

Do Case
	Case cMes == "01"
		cRet := "janeiro de "
	Case cMes == "02"
		cRet := "fevereiro de "
	Case cMes == "03"
		cRet := "março de "
	Case cMes == "04"
		cRet := "abril de "
	Case cMes == "05"
		cRet := "maio de "
	Case cMes == "06"
		cRet := "junho de "
	Case cMes == "07"
		cRet := "julho de "
	Case cMes == "08"
		cRet := "agosto de "
	Case cMes == "09"
		cRet := "setembro de "
	Case cMes == "10"
		cRet := "outubro de "
	Case cMes == "11"
		cRet := "novembro de "
	Case cMes == "12"
		cRet := "dezembro de " 
EndCase

cRet += cAno

Return cRet	

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fGetFlxAdi  ºAutor Jean Carlos Saggin  º Data ³  14/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função responsável por retornar o valor de flex adicional  º±±
±±º          ³ já liberado para o vendedor no período.                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MANZA4                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fGetFlxAdi(cCodVen, cPeriodo, nValor, nVlAnt, nOpc)

Local nVlAtu := 0
Local cTotal := ""
Local cSql   := ""                                                            
Local cEol   := CHR(13)+CHR(10)

cSql := "select sum(za4.za4_valor) as vlrlib from "+ RetSqlName("ZA4")+ " za4 "+cEol
cSql += "where za4.za4_codven = '"+ cCodVen +"' "                              +cEol
cSql += "  and za4.za4_period = '"+ cPeriodo +"' "                             +cEol
cSql += "  and za4.d_e_l_e_t_ <> '*'"

TCQUERY cSql NEW ALIAS "za4tmp"

DbSelectArea("za4tmp")
za4tmp->(DbGoTop())

if !za4tmp->(EOF())
	nVlAtu := za4tmp->vlrlib
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se estiver incluindo já inclui o valor do registro atual ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

if nOpc == 3
	nVlAtu += nValor
ElseIf nOpc == 4
	nVlAtu -= nVlAnt
	nVlAtu += nValor		
EndIf

cTotal := "R$ "+ Transform(nVlAtu, "@E 999,999.99") 

za4tmp->(DbCloseArea())

Return cTotal